package com.github.archturion64.thirdeye.domains;

import lombok.Data;
import lombok.NoArgsConstructor;
import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

import javax.validation.constraints.Pattern;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

@Data
@NoArgsConstructor
@Entity
@Table(name = "vulnerability",
        uniqueConstraints = {
        @UniqueConstraint(name = "vulnerability_cve_unique", columnNames = "vulnerability_cve")
        })
public class Vulnerability {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(
            name = "vulnerability_id",
            updatable = false)
    private Long id;

    @Column(
            name = "vulnerability_cve",
            columnDefinition="TEXT",
            nullable = false)
    @Pattern(regexp="CVE-\\d{4}-\\d{4,7}",message="Invalid CVE number")
    private String vulnerabilityCve;

    @Column(
            name = "vulnerability_name",
            columnDefinition="TEXT",
            nullable = false)
    private String name;

    @Column(name = "vulnerability_description",
            columnDefinition="TEXT")
    private String description;

    @Enumerated(EnumType.STRING)
    @Column(name = "vulnerability_severity")
    private Severity severity;

    @ManyToMany(
            fetch = FetchType.LAZY,
            mappedBy = "vulnerabilities"
    )
    @OnDelete(action = OnDeleteAction.CASCADE)
    private List<Device> devices = new ArrayList<>();

    public Vulnerability(String vulnerabilityCve, String name, String description, Severity severity) {
        this.vulnerabilityCve = vulnerabilityCve;
        this.name = name;
        this.description = description;
        this.severity = severity;
    }
}
